t.test(accuracy ~ method, data = aggdata, alternative = "greater",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "two.sided",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "greater",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "less",
paired = TRUE)
shapiro.test(data$accuracy)
diff <- data[method]
shapiro.test(data$accuracy)
diff <- data.mean
### Make some actual normally distributed data
normal.data <- rnorm(250,mean=100,sd=10)
### Plot histogram and qqplot
par(mfrow=c(1,2))
truehist(normal.data)
qqnorm(normal.data)
shapiro.test(data$accuracy)
shapiro.test(data$accuracy)
gc()
pacman::p_load(pacman, ggplot2, rio, devtools)
# Load all necessary libraries
```{r setup_rmd}
pacman::p_load(pacman, ggplot2, rio, devtools)
base_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(base_dir)
```{r load dataset}
data <- import("dataset.csv")
data$min_energy <- as.factor(data$min_energy)
aggdata <- aggregate(accuracy ~ min_energy:method,
data = data, FUN = mean)
summary(aggdata)
t.test(accuracy ~ method, data = aggdata, alternative = "less",
paired = TRUE)
# Check data assumptions
```{r check_assumptions}
shapiro.test(data$accuracy)
pacman::p_load(pacman, ggplot2, rio, devtools, mess)
pacman::p_load(pacman, ggplot2, rio, devtools, MESS)
base_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(base_dir)
MESS::power_t_test(n=NULL, sd=15, delta=15,
+ ratio=1, sd.ratio=1,
MESS::power_t_test(n=NULL, sd=15, delta=15,
+ ratio=1, sd.ratio=1,
```
MESS::power_t_test(n=NULL, sd=15, delta=15,
+ ratio=1, sd.ratio=1,
power_t_test(n=NULL, sd=15, delta=15,
+ ratio=1, sd.ratio=1,
pacman::p_load(pacman, ggplot2, rio, devtools, MESS)
base_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(base_dir)
power_t_test(n=NULL, sd=15, delta=15,
+ ratio=1, sd.ratio=1,
data <- import("dataset.csv")
data$min_energy <- as.factor(data$min_energy)
summary(aggdata)
pacman::p_load(pacman, ggplot2, rio, devtools, MESS)
base_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(base_dir)
data <- import("dataset.csv")
data$min_energy <- as.factor(data$min_energy)
aggdata <- aggregate(accuracy ~ min_energy:method,
data = data, FUN = mean)
summary(aggdata)
t.test(accuracy ~ method, data = aggdata, alternative = "less",
paired = TRUE)
shapiro.test(data$accuracy)
data <- data.frame(
min_energy = c(0.05, 0.05, 0.0975, 0.0975, 0.145, 0.145, 0.1925, 0.1925, 0.24, 0.24, 0.2875, 0.2875,
0.335, 0.335, 0.3825, 0.3825, 0.43, 0.43, 0.4775, 0.4775, 0.525, 0.525, 0.5725, 0.5725,
0.62, 0.62, 0.6675, 0.6675, 0.715, 0.715, 0.7625, 0.7625, 0.81, 0.81, 0.8575, 0.8575,
0.905, 0.905, 0.9525, 0.9525, 1, 1),
method = c(rep("cosine_similarity", 21), rep("scaled_cosine_similarity", 21)),
accuracy = c(0.806325, 0.806325, 0.82285, 0.83385, 0.889325, 0.863925, 0.920825, 0.87425, 0.928575,
0.880725, 0.9417, 0.883025, 0.94915, 0.883625, 0.9515, 0.88265, 0.949725, 0.881125,
0.9421, 0.8802, 0.934675, 0.87905, 0.927825, 0.878325, 0.91785, 0.877675, 0.911475,
0.877225, 0.90085, 0.877, 0.89225, 0.87685, 0.884125, 0.876825, 0.869975, 0.876725,
0.8422, 0.876725, 0.78065, 0.876725, 0.11635, 0.876725)
)
# Create the paired plot
ggplot(data, aes(x = min_energy, y = accuracy, color = method, shape = method)) +
geom_point() +
geom_line() +
labs(x = "Min Energy", y = "Accuracy", color = "Method", shape = "Method") +
theme_minimal()
data <- import("dataset.csv")
data$min_energy <- as.factor(data$min_energy)
aggdata <- aggregate(accuracy ~ min_energy:method,
data = data, FUN = mean)
summary(aggdata)
t.test(accuracy ~ method, data = aggdata, alternative = "less",
paired = TRUE)
# Create the paired plot
ggplot(data, aes(x = min_energy, y = accuracy, color = method, shape = method)) +
geom_point() +
geom_line() +
labs(x = "Min Energy", y = "Accuracy", color = "Method", shape = "Method") +
theme_minimal()
# Calculate the sample size
power_t_test(n = NULL, delta = effect_size, sig_level = alpha, power = (1-beta),
+ paired = TRUE, alternative = "two.sided")
effect_size <- 0.5   # Effect size (Cohen's d)
alpha <- 0.05       # Significance level
power <- 0.2        # Desired power
# Calculate the sample size
power_t_test(n = NULL, delta = effect_size, sig_level = alpha, power = power,
+ paired = TRUE, alternative = "two.sided")
# Calculate the sample size
power_t_test(n = NULL, delta = effect_size, sig_level = alpha, power = power,
paired = TRUE, alternative = "two.sided")
# Calculate the sample size
power_t_test(n = NULL, delta = effect_size, sig_level = alpha, power = power,
+ paired = TRUE, alternative = "two.sided")
# Calculate the sample size
power_t_test(n = NULL, delta = effect_size, sig_level = alpha, power = power,
paired = TRUE, alternative = "two.sided")
# Calculate the sample size
MESS::power_t_test(n = NULL, delta = effect_size, sig_level = alpha, power = power,
paired = TRUE, alternative = "two.sided")
power_t_test(n=NULL, sd=15, delta=15,
+ ratio=1, sd.ratio=1,
power_t_test(n=NULL, sd=15, delta=0.05,
+ ratio=1, sd.ratio=1,
power_t_test(n=NULL, sd=15, delta=0.05,
+ ratio=1, sd.ratio=1,
power_t_test(n=NULL, sd=15, delta=0.05,
+ ratio=1, sd.ratio=1,
power_t_test(n=NULL, sd=15, delta=0.05,
+ ratio=1, sd.ratio=1,
power_t_test(n=NULL, sd=15, delta=0.05,
+ ratio=1, sd.ratio=1,
power_t_test(n=NULL, sd=15, delta=0.05,
+ ratio=1, sd.ratio=1,
power_t_test(n=NULL, sd=15, delta=0.05,
ratio=1, sd.ratio=1,
power=0.8, sig.level = 0.05,
type="paired", alternative="one.sided")
power_t_test(n=NULL, sd=0.5, delta=0.05,
ratio=1, sd.ratio=1,
power=0.8, sig.level = 0.05,
type="paired", alternative="one.sided")
power_t_test(n=NULL, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=0.8, sig.level = 0.05,
type="paired", alternative="one.sided")
power_t_test(n=NULL, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=0.8, sig.level = 0.05,
type="paired", alternative="two.sided")
pacman::p_load(pacman, ggplot2, rio, devtools, MESS)
base_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(base_dir)
data <- import("dataset.csv")
data$min_energy <- as.factor(data$min_energy)
aggdata <- aggregate(accuracy ~ min_energy:method,
data = data, FUN = mean)
summary(aggdata)
data <- import("dataset.csv")
data$min_energy <- as.factor(data$min_energy)
aggdata <- aggregate(accuracy ~ min_energy:method,
data = data, FUN = mean)
summary(aggdata)
t.test(accuracy ~ method, data = aggdata, alternative = "less",
paired = TRUE)
# Create the paired plot
ggplot(data, aes(x = min_energy, y = accuracy, color = method, shape = method)) +
geom_point() +
geom_line() +
labs(x = "Min Energy", y = "Accuracy", color = "Method", shape = "Method") +
theme_minimal()
+ geom_point() +
geom_line() +
labs(x = "Min Energy", y = "Accuracy", color = "Method", shape = "Method") +
theme_minimal()
# Create the paired plot
ggplot(data, aes(x = min_energy, y = accuracy, color = method, shape = method))
+ geom_point() +
geom_line() +
labs(x = "Min Energy", y = "Accuracy", color = "Method", shape = "Method") +
theme_minimal()
# Create the paired plot
ggplot(data, aes(x = min_energy, y = accuracy, color = method, shape = method))+
geom_point() +
geom_line() +
labs(x = "Min Energy", y = "Accuracy", color = "Method", shape = "Method") +
theme_minimal()
power_t_test(n=20, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=0.8, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=NULL, delta=0.05,
ratio=1, sd.ratio=1,
power=0.8, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=NULL, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=0.8, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=NULL, delta=0.05,
ratio=1, sd.ratio=1,
power=0.8, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=NULL, delta=0.05,
ratio=1, sd.ratio=1,
power=0.8, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=10, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=0.05, delta=0.025,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.025,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.025,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.01,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.5,
type="paired", alternative="two.sided")
power_t_test(n=20, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=NULL, sig.level = 0.05,
type="paired", alternative="two.sided")
power_t_test(n=NULL, sd=0.05, delta=0.05,
ratio=1, sd.ratio=1,
power=0.8, sig.level = 0.05,
type="paired", alternative="two.sided")
experiment_power  <- 0.8
alpha <- 0.05
experiment_power  <- 0.8
minimum_interesting_effect <- 0.05
power_t_test(n=NULL, sd=0.05, delta=minimum_interesting_effect,
ratio=1, sd.ratio=1,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
power_t_test(n=NULL, sd=std, delta=minimum_interesting_effect,
ratio=1, sd.ratio=1,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
std <- 0.02
power_t_test(n=NULL, sd=std, delta=minimum_interesting_effect,
ratio=1, sd.ratio=1,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
minimum_interesting_effect <- 0.02
power_t_test(n=NULL, sd=std, delta=minimum_interesting_effect,
ratio=1, sd.ratio=1,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
alpha <- 0.05
experiment_power  <- 0.8
minimum_interesting_effect <- 0.02
std <- 0.02
power_t_test(n=NULL, sd=std, delta=minimum_interesting_effect,
ratio=1, sd.ratio=1,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
sd_ratio <- 1.33
power_t_test(n=NULL, sd=std, delta=minimum_interesting_effect,
ratio=1, sd.ratio=sd_ratio,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
std <- 0.013
sd_ratio <- 1.33
power_t_test(n=NULL, sd=std, delta=minimum_interesting_effect,
ratio=1, sd.ratio=sd_ratio,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
std <- 0.02
sd_ratio <- 1.33
power_t_test(n=NULL, sd=std, delta=minimum_interesting_effect,
ratio=1, sd.ratio=sd_ratio,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
std <- 0.018
sd_ratio <- 1.33
power_t_test(n=NULL, sd=std, delta=minimum_interesting_effect,
ratio=1, sd.ratio=sd_ratio,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
alpha <- 0.05
experiment_power  <- 0.8
minimum_interesting_effect <- 0.02
std <- 0.018
sd_ratio <- 1.77
power_t_test(n=NULL, sd=std, delta=minimum_interesting_effect,
ratio=1, sd.ratio=sd_ratio,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
alpha <- 0.05
experiment_power  <- 0.8
minimum_interesting_effect <- 0.02
std <- 0.015
sd_ratio <- 1.33
power_t_test(n=NULL, sd=std, delta=minimum_interesting_effect,
ratio=1, sd.ratio=sd_ratio,
power=experiment_power, sig.level = alpha,
type="paired", alternative="two.sided")
data <- import("dataset.csv")
data$min_energy <- as.factor(data$min_energy)
aggdata <- aggregate(accuracy ~ min_energy:method,
data = data, FUN = mean)
summary(aggdata)
# Create the paired plot
ggplot(data, aes(x = min_energy, y = accuracy, color = method, shape = method))+
geom_point() +
geom_line() +
labs(x = "Min Energy", y = "Accuracy", color = "Method", shape = "Method") +
theme_minimal()
t.test(accuracy ~ method, data = aggdata, alternative = "less",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "two.sided",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "greater",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "greater",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "less",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "greater",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "less",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "greater",
paired = TRUE)
View(aggdata)
View(aggdata)
t.test(accuracy ~ method, data = aggdata, alternative = "greater",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "greater",
paired = TRUE)
t.test(accuracy ~ method, data = aggdata, alternative = "two.sided",
paired = TRUE)
# Create the paired plot
ggplot(data, aes(x = min_energy, y = accuracy, color = method, shape = method))+
geom_point() +
geom_line() +
labs(x = "Min Energy", y = "Accuracy", color = "Method", shape = "Method") +
theme_minimal()
shapiro.test(data$accuracy)
shapiro.test(aggdata$accuracy)
View(aggdata)
View(data)
View(data)
View(aggdata)
difTimes <- aggdata$Time[1:10] - aggdata$Time[11:20])
shapiro.test(difTimes)
difTimes <- aggdata$Time[1:10] - aggdata$Time[11:20]
shapiro.test(difTimes)
difTimes <- (aggdata$Time[1:10] - aggdata$Time[11:20])
shapiro.test(difTimes)
shapiro.test(data$accuracy)
qqplot(data$accuracy)
shapiro.test(data$accuracy)
View(data)
data$method
data[method]
data[cosine_similarity]
data["cosine_similarity"]
data["cosine_similarity"]
data[,"cosine_similarity"]
data[, 1]
data[1, 1]
View(data)
data[2, 1]
data[3, 1]
data[30, 1]
data[, 1]
data[, 2]
data[, 3]
data[1, 3]
data[1, 2]
data[2, 2]
View(data)
data[, 2]
data[, 2] == "cosine_similarity"
data[, data[, 2] == "cosine_similarity"]
data[, data[, 2]=="cosine_similarity"]
data[, 2]=="cosine_similarity"
data[1, 2]=="cosine_similarity"
data[data$method == "cosine_similarity", 3]
data[data$method == "cosine_similarity", 3] - data[data$method == "scaled_cosine_similarity", 3]
diff <- data[data$method == "cosine_similarity", 3] -
data[data$method == "scaled_cosine_similarity", 3]
accuracy_diff <- data[data$method == "cosine_similarity", 3] -
data[data$method == "scaled_cosine_similarity", 3]
shapiro.test(accuracy_diff)
qqplot(x = rnorm(50, 50, 20), y = accuracy_diff)
qqplot(x = rnorm(1, 0, 10), y = accuracy_diff)
qqplot(x = rnorm(50, 50, 20), y = accuracy_diff)
shapiro.test(accuracy_diff)
qqplot(x = rnorm(50, 50, 20), y = accuracy_diff)
# Create the paired plot
ggplot(data, aes(x = min_energy, y = accuracy, color = method, shape = method))+
geom_point() +
geom_line() +
labs(x = "Min Energy", y = "Accuracy", color = "Method", shape = "Method") +
theme_minimal()
accuracy_diff <- data[data$method == "cosine_similarity", 3] -
data[data$method == "scaled_cosine_similarity", 3]
shapiro.test(accuracy_diff)
qqplot(x = rnorm(50, 50, 20), y = accuracy_diff)
qqplot(x = rnorm(100, 0, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Urban Population",
main = "Q-Q Plot"))
qqplot(x = rnorm(100, 0, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Urban Population",
main = "Q-Q Plot")
qqplot(x = rnorm(100, 0, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Accuracy",
main = "Q-Q Plot")
shapiro.test(accuracy_diff)
qqplot(x = rnorm(100, 0, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Accuracy",
main = "Q-Q Plot")
# Create the paired plot
ggplot(data, aes(x = min_energy, y = accuracy, color = method, shape = method))+
geom_point() +
geom_line() +
labs(x = "Min Energy", y = "Accuracy", color = "Method", shape = "Method") +
theme_minimal()
plot(x = data$method == "cosine_similarity", y = data$accuracy)
plot(x = data$method == "cosine_similarity", y = data$accuracy)
plot(x = data$method == "cosine_similarity", y = data$accuracy - mean(data$accuracy))
plot(x = data$method == "cosine_similarity", y = data$accuracy - mean(data$accuracy))
plot(x = data$method == "cosine_similarity",
y = data$accuracy - mean(data$accuracy),
xlab = "Method",
ylab = "Accuracy - mean")
plot(x = data$method == "cosine_similarity",
y = data$accuracy - mean(data$accuracy),
xlab = "Method",
ylab = "Accuracy - mean")
t.test(accuracy ~ method, data = aggdata, alternative = "two.sided",
paired = TRUE, )
qqplot(x = rnorm(100, 0, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Accuracy",
main = "Q-Q Plot")
qqplot(x = rnorm(100, 0, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Accuracy",
main = "Q-Q Plot")
qqplot(x = rnorm(100, 1, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Accuracy",
main = "Q-Q Plot")
qqplot(x = rnorm(100, 10, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Accuracy",
main = "Q-Q Plot")
qqplot(x = rnorm(100, 0.043, 0.015), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Accuracy",
main = "Q-Q Plot")
qqplot(x = rnorm(100, 0, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Accuracy",
main = "Q-Q Plot")
qqplot(x = rnorm(100, 0, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Accuracy",
main = "Q-Q Plot",
)
plot(x = data$method == "cosine_similarity",
y = data$accuracy - mean(data$accuracy),
xlab = "Method",
ylab = "Accuracy - mean")
shapiro.test(accuracy_diff)
qqplot(x = rnorm(100, 0, 1), y = accuracy_diff,
xlab = "Normal Distribution",
ylab = "Accuracy",
main = "Q-Q Plot",
)
plot(x = data$method == "cosine_similarity",
y = data$accuracy - mean(data$accuracy),
xlab = "Method",
ylab = "Accuracy - mean")
